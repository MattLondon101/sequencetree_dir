/* BEGIN EXCLUDE */
/* END EXCLUDE */

class STReadout : public STNode {
public:
	/* BEGIN SEQUENCETREE -- this section generated by SequenceTree -- do not edit */
	STInteger enabled;
	STReal dwell_time; //degrees
	STInteger N;
	STReal reference_fraction; //between 0 and 1
	STReal actual_reference_fraction;
	STReal reference_sample;
	STReal phase;
	STReal frequency;	
	STVector3 gradient_amplitude;
	/* END SEQUENCETREE -- this section generated by SequenceTree -- do not edit */
	//events
	STScannerReadout *Readout;
	/////////////////////////////////////////////////////
	STReadout();
	virtual ~STReadout();
	bool initialize();
	bool prepare();
	bool run();
	double duration();
	double referenceTime();
	Vector3 gradientStartTimes(); 
	Vector3 gradientEndTimes();
	void setGradientAmplitude(Vector3 amp);
	void setADCIndices(int &indx);
	void setReadoutIndex(int iterator_index,int indx);
	void setCurrentLine(long val);
	void setCurrentPartition(long val);
	void setCurrentAverage(long val);
	void setCurrentSlice(long val);
	void setCurrentEcho(long val);
	void setCurrentPhase(long val);
	void setCurrentRepetition(long val);
	void setCurrentSet(long val);
	void setCurrentSegment(long val);
	void setCurrentIda(long val);
	void setCurrentIdb(long val);
	void setCurrentIdc(long val);
	void setCurrentIdd(long val);
	void setCurrentIde(long val);
	void setFirstScanInSlice(bool val);
	void setLastScanInSlice(bool val);
	void setLastScanInConcatenation(bool val);
	void setLastScanInMeasurement(bool val);
	void scannerCommand(SString command_name,long param1=0,long param2=0,long param3=0);
private:
	void delete_events();
	int m_ADC_index;
};

